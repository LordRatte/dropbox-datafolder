"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
///<reference types="node"/>
require("source-map-support/register");
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
const path = require("path");
const async_filesystem_1 = require("../src/async-filesystem");
const async_1 = require("../src/async");
const util_1 = require("util");
function tlog(a) {
    console.log(a);
    return a;
}
Error.stackTraceLimit = Infinity;
// var pause = true;
// while(pause) debugger;
const cont = async_1.override({ boot: {} });
const TWSource = "C:\\ArlenStuff\\TiddlyWiki5-compiled\\Source\\TiddlyWiki5-5.1.17";
const TWOutput = "C:\\ArlenStuff\\twcloud\\datafolder\\boot-async\\test-output";
var $tw = require(TWSource).TiddlyWiki();
$tw.boot.argv = [path.join(TWSource, "editions/empty")];
$tw.packageInfo = require(path.join(TWSource, "package.json"));
async_1.startup_patch($tw, { bootPath: path.join(TWSource, "boot") });
async_1.override($tw);
console.log('tiddlywiki loaded');
console.log('override complete');
rxjs_1.from(['plugins', 'themes']).pipe(operators_1.map(folder => path.join(TWSource, folder)), operators_1.mergeMap(fullpath => async_filesystem_1.obs_readdir(cont)()(fullpath)), operators_1.mergeMap(([err, files, t, folder]) => rxjs_1.from(files.map(author => path.join(folder, author)))), operators_1.startWith(path.join(TWSource, 'languages')), operators_1.mergeMap(fullpath => async_filesystem_1.obs_readdir(cont)()(fullpath)), operators_1.mergeMap(([err, files, t, folder]) => rxjs_1.from(files.map(plugin => path.join(folder, plugin)))), operators_1.startWith(path.join(TWSource, 'core')), operators_1.mergeMap(fullpath => $tw.loadPluginFolder(rxjs_1.of(fullpath)).pipe(operators_1.mapTo(fullpath)))).pipe(operators_1.tap(console.log), operators_1.count(), operators_1.tap(console.log)).pipe(operators_1.mapTo(path.join(TWSource, "editions")), operators_1.mergeMap(fullpath => async_filesystem_1.obs_readdir(cont)()(fullpath)), operators_1.mergeMap(([err, files, tag, editionsFolder]) => tlog(err) ? rxjs_1.empty() : rxjs_1.from(files.map(file => path.join(editionsFolder, file)))), operators_1.mergeMap((edition) => {
    var $tw2 = require(TWSource).TiddlyWiki();
    $tw2.boot.argv = [edition];
    $tw2.packageInfo = require(path.join(TWSource, "package.json"));
    async_1.startup_patch($tw2, { bootPath: path.join(TWSource, "boot") });
    async_1.override($tw2);
    return rxjs_1.of(true).pipe(operators_1.tap(() => { console.time(edition); }), operators_1.mergeMap(() => $tw2.loadWikiTiddlers(edition)), operators_1.map(wikiInfo => {
        $tw2.boot.wikiInfo = wikiInfo;
        console.timeEnd(edition);
        return $tw2;
    }));
})).subscribe(() => { }, (err) => {
    // console.log(new Error().stack);
    console.log(util_1.inspect(err));
}, () => { cont.closeSubjects(); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0QkFBNEI7QUFDNUIsdUNBQXFDO0FBQ3JDLCtCQUF1QztBQUN2Qyw4Q0FBMEc7QUFDMUcsNkJBQTZCO0FBQzdCLDhEQUFpRTtBQUNqRSx3Q0FBdUQ7QUFDdkQsK0JBQStCO0FBQy9CLGNBQWlCLENBQUk7SUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNmLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDVixDQUFDO0FBQ0QsS0FBSyxDQUFDLGVBQWUsR0FBRyxRQUFRLENBQUM7QUFDakMsb0JBQW9CO0FBQ3BCLHlCQUF5QjtBQUN6QixNQUFNLElBQUksR0FBRyxnQkFBUSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFHcEMsTUFBTSxRQUFRLEdBQUcsa0VBQWtFLENBQUM7QUFDcEYsTUFBTSxRQUFRLEdBQUcsOERBQThELENBQUM7QUFFaEYsSUFBSSxHQUFHLEdBQVEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQzlDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQyxDQUFBO0FBQ3ZELEdBQUcsQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7QUFDL0QscUJBQWEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzlELGdCQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7QUFFZCxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDakMs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